_ZN1NC2Ei N::N(int value)

Dump of assembler code for function _ZN1NC2Ei:
   0x080486f6 <+0>:     push   ebp
   0x080486f7 <+1>:     mov    ebp,esp
   0x080486f9 <+3>:     mov    eax,DWORD PTR [ebp+0x8]       ; eax = N object passed as parameter
   0x080486fc <+6>:     mov    DWORD PTR [eax],0x8048848     ; *(eax) = vtable.N.0
   0x08048702 <+12>:    mov    eax,DWORD PTR [ebp+0x8]       ; eax = N object passed as parameter
   0x08048705 <+15>:    mov    edx,DWORD PTR [ebp+0xc]       ; the second arg (int 5 or 6)
   0x08048708 <+18>:    mov    DWORD PTR [eax+0x68],edx      ; N_object[0x68] = second arg
   0x0804870b <+21>:    pop    ebp
   0x0804870c <+22>:    ret
End of assembler dump.

ZN1NplERS N::operator+(N&)

Dump of assembler code for function _ZN1NplERS_:
   0x0804873a <+0>:     push   ebp
   0x0804873b <+1>:     mov    ebp,esp
   0x0804873d <+3>:     mov    eax,DWORD PTR [ebp+0x8]       ; eax = first N object (a)
   0x08048740 <+6>:     mov    edx,DWORD PTR [eax+0x68]      ; edx = a->value
   0x08048743 <+9>:     mov    eax,DWORD PTR [ebp+0xc]       ; eax = second N object (b)
   0x08048746 <+12>:    mov    eax,DWORD PTR [eax+0x68]      ; eax = b->value
   0x08048749 <+15>:    add    eax,edx                       ; eax = eax + edx (a->value + b->value)
   0x0804874b <+17>:    pop    ebp
   0x0804874c <+18>:    ret
End of assembler dump.

ZN1NmiERS N::operator-(N&)

Dump of assembler code for function _ZN1NmiERS_:
   0x0804874e <+0>:     push   ebp
   0x0804874f <+1>:     mov    ebp,esp
   0x08048751 <+3>:     mov    eax,DWORD PTR [ebp+0x8]       ; eax = first N object (a)
   0x08048754 <+6>:     mov    edx,DWORD PTR [eax+0x68]      ; edx = a->value
   0x08048757 <+9>:     mov    eax,DWORD PTR [ebp+0xc]       ; eax = second N object (b)
   0x0804875a <+12>:    mov    eax,DWORD PTR [eax+0x68]      ; eax = b->value
   0x0804875d <+15>:    mov    ecx,edx                       ; ecx = a->value
   0x0804875f <+17>:    sub    ecx,eax                       ; ecx = ecx - eax (a->value - b->value)
   0x08048761 <+19>:    mov    eax,ecx                       ; eax = ecx
   0x08048763 <+21>:    pop    ebp
   0x08048764 <+22>:    ret
End of assembler dump.

_ZN1N13setAnnotationEPc

Dump of assembler code for function _ZN1N13setAnnotationEPc:
   0x0804870e <+0>:     push   ebp
   0x0804870f <+1>:     mov    ebp,esp
   0x08048711 <+3>:     sub    esp,0x18
   0x08048714 <+6>:     mov    eax,DWORD PTR [ebp+0xc]       ; eax is pointing on arg2[0]
   0x08048717 <+9>:     mov    DWORD PTR [esp],eax
   0x0804871a <+12>:    call   0x8048520 <strlen@plt>        ; eax = strlen(second arg)
   0x0804871f <+17>:    mov    edx,DWORD PTR [ebp+0x8]       ; edx is pointing on arg1[0]
   0x08048722 <+20>:    add    edx,0x4                       ; edx += 4
   0x08048725 <+23>:    mov    DWORD PTR [esp+0x8],eax       ; 
   0x08048729 <+27>:    mov    eax,DWORD PTR [ebp+0xc]
   0x0804872c <+30>:    mov    DWORD PTR [esp+0x4],eax
   0x08048730 <+34>:    mov    DWORD PTR [esp],edx
   0x08048733 <+37>:    call   0x8048510 <memcpy@plt>
   0x08048738 <+42>:    leave
   0x08048739 <+43>:    ret
End of assembler dump.

